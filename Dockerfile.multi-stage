# Многоэтапная сборка для оптимизации размера образа

# Этап 1: Сборка
FROM node:18-alpine AS builder

WORKDIR /app

# Копируем package.json и package-lock.json
COPY package*.json ./

# Устанавливаем ВСЕ зависимости для сборки
RUN npm ci

# Копируем исходный код
COPY . .

# Собираем TypeScript
RUN npm run build

# Этап 2: Production
FROM node:18-alpine AS production

WORKDIR /app

# Копируем package.json и package-lock.json
COPY package*.json ./

# Устанавливаем только production зависимости
RUN npm ci --only=production --omit=dev

# Копируем собранные файлы из builder этапа
COPY --from=builder /app/dist ./dist

# Копируем скрипт запуска
COPY --from=builder /app/start.sh ./start.sh

# Делаем скрипт запуска исполняемым
RUN chmod +x start.sh

# Создаем пользователя для безопасности
RUN addgroup -g 1001 -S nodejs
RUN adduser -S nodejs -u 1001

# Меняем владельца файлов
RUN chown -R nodejs:nodejs /app
USER nodejs

# Открываем порт
EXPOSE 3000

# Устанавливаем переменные окружения
ENV NODE_ENV=production
ENV PORT=3000

# Graceful shutdown
STOPSIGNAL SIGTERM

# Запускаем приложение через скрипт
CMD ["./start.sh"] 